/*!
Language: Erlang
Description: Erlang is a general-purpose functional language, with strict evaluation, single assignment, and dynamic typing.
Author: Nikolay Zakharov <nikolay.desh@gmail.com>, Dmitry Kovega <arhibot@gmail.com>
*/
hljs.registerLanguage("erlang",function(i){var c="[a-z'][a-zA-Z0-9_']*";var o="("+c+":"+c+"|"+c+")";var f={keyword:"after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun let not of orelse|10 query receive rem try when xor",literal:"false true"};var l={className:"comment",begin:"%",end:"$",relevance:0};var e={className:"number",begin:"\\b(\\d+#[a-fA-F0-9]+|\\d+(\\.\\d+)?([eE][-+]?\\d+)?)",relevance:0};var g={begin:"fun\\s+"+c+"/\\d+"};var n={begin:o+"\\(",end:"\\)",returnBegin:true,relevance:0,contains:[{className:"function_name",begin:o,relevance:0},{begin:"\\(",end:"\\)",endsWithParent:true,returnEnd:true,relevance:0}]};var h={className:"tuple",begin:"{",end:"}",relevance:0};var a={className:"variable",begin:"\\b_([A-Z][A-Za-z0-9_]*)?",relevance:0};var m={className:"variable",begin:"[A-Z][a-zA-Z0-9_]*",relevance:0};var b={begin:"#"+i.UNDERSCORE_IDENT_RE,relevance:0,returnBegin:true,contains:[{className:"record_name",begin:"#"+i.UNDERSCORE_IDENT_RE,relevance:0},{begin:"{",end:"}",relevance:0}]};var k={beginKeywords:"fun receive if try case",end:"end",keywords:f};k.contains=[l,g,i.inherit(i.APOS_STRING_MODE,{className:""}),k,n,i.QUOTE_STRING_MODE,e,h,a,m,b];var j=[l,g,k,n,i.QUOTE_STRING_MODE,e,h,a,m,b];n.contains[1].contains=j;h.contains=j;b.contains[1].contains=j;var d={className:"params",begin:"\\(",end:"\\)",contains:j};return{keywords:f,illegal:"(</|\\*=|\\+=|-=|/=|/\\*|\\*/|\\(\\*|\\*\\))",contains:[{className:"function",begin:"^"+c+"\\s*\\(",end:"->",returnBegin:true,illegal:"\\(|#|//|/\\*|\\\\|:|;",contains:[d,i.inherit(i.TITLE_MODE,{begin:c})],starts:{end:";|\\.",keywords:f,contains:j}},l,{className:"pp",begin:"^-",end:"\\.",relevance:0,excludeEnd:true,returnBegin:true,lexemes:"-"+i.IDENT_RE,keywords:"-module -record -undef -export -ifdef -ifndef -author -copyright -doc -vsn -import -include -include_lib -compile -define -else -endif -file -behaviour -behavior",contains:[d]},e,i.QUOTE_STRING_MODE,b,a,m,h]}});